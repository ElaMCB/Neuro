name: Weekly Job Search

on:
  schedule:
    # Run every Monday at 9:00 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:  # Allow manual trigger

jobs:
  weekly-job-search:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_job_search.txt
        pip install beautifulsoup4 lxml python-docx
    
    - name: Create profile config (from template)
      run: |
        # Create a template profile config if it doesn't exist
        # User should replace with actual config or use secrets
        cat > profile_config.json << EOF
        {
          "name": "Elena Mereanu",
          "email": "${{ secrets.USER_EMAIL }}",
          "target_roles": ["prompt engineer", "ai engineer", "ml engineer"],
          "skills": ["python", "pytorch", "llm", "gpt", "transformers"],
          "experience_level": "junior",
          "locations": ["remote", "US", "Boston", "New York"],
          "remote_preference": true,
          "github_url": "https://github.com/ElaMCB/Neuro",
          "linkedin_url": "linkedin.com/in/elenamereanu"
        }
        EOF
      env:
        USER_EMAIL: ${{ secrets.USER_EMAIL || 'elena.mereanu@gmail.com' }}
    
    - name: Run weekly job search
      run: |
        python run_neuro.py my_job_search.neuro
    
    - name: Generate results report
      run: |
        # Get most recent results file
        LATEST_RESULT=$(ls -t job_search_results/job_search_*.json 2>/dev/null | head -1)
        if [ -n "$LATEST_RESULT" ]; then
          python display_results.py "$LATEST_RESULT"
        fi
    
    - name: Upload results as artifact
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: job-search-results-${{ github.run_number }}
        path: |
          job_search_results/
          job_search_reports/
          resume_templates/
        retention-days: 30
    
    - name: Comment on issue or create summary
      run: |
        echo "## Weekly Job Search Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "âœ… Job search completed!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Results are available in the artifacts above." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "View results:" >> $GITHUB_STEP_SUMMARY
        LATEST_RESULT=$(ls -t job_search_results/job_search_*.json 2>/dev/null | head -1)
        if [ -n "$LATEST_RESULT" ]; then
          echo "- Latest results: \`$LATEST_RESULT\`" >> $GITHUB_STEP_SUMMARY
        fi

