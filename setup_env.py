#!/usr/bin/env python3
"""
Quick setup for Neuro environment variables
Helps you create a .env file with your API keys
"""
import os
from pathlib import Path

def setup_environment():
    """Interactive setup for Neuro environment"""
    
    print("=" * 60)
    print("Neuro Environment Setup")
    print("=" * 60)
    print()
    
    # Check if .env already exists
    env_file = Path(".env")
    if env_file.exists():
        print("⚠️  .env file already exists!")
        response = input("   Overwrite? (y/n): ").strip().lower()
        if response != 'y':
            print("   Setup cancelled. Edit .env manually if needed.")
            return
        print()
    
    config = {}
    
    # DeepSeek API Key
    print("1. DeepSeek API Key (Recommended - 200x cheaper!)")
    print("   Get yours at: https://platform.deepseek.com")
    deepseek_key = input("   Enter your DeepSeek API key (or press Enter to skip): ").strip()
    if deepseek_key:
        config['DEEPSEEK_API_KEY'] = deepseek_key
        print("   ✓ DeepSeek key added")
    print()
    
    # OpenAI API Key (optional)
    print("2. OpenAI API Key (Alternative - more expensive)")
    print("   Get yours at: https://platform.openai.com")
    openai_key = input("   Enter your OpenAI API key (or press Enter to skip): ").strip()
    if openai_key:
        config['OPENAI_API_KEY'] = openai_key
        print("   ✓ OpenAI key added")
    print()
    
    # Email for job search
    print("3. Email Configuration (for job search notifications)")
    email = input("   Your email address: ").strip()
    if email:
        config['USER_EMAIL'] = email
        config['SENDER_EMAIL'] = email
        config['RECIPIENT_EMAIL'] = email
        
        # Gmail app password
        print("\n   For Gmail: Use App Password, not regular password")
        print("   See: EMAIL_SETUP.md for instructions")
        password = input("   Gmail App Password (or press Enter to skip): ").strip()
        if password:
            config['SENDER_PASSWORD'] = password
            print("   ✓ Email configuration added")
    print()
    
    # Write .env file
    if config:
        with open('.env', 'w') as f:
            f.write("# Neuro Environment Configuration\n")
            f.write("# Generated by setup_env.py\n\n")
            
            for key, value in config.items():
                f.write(f"{key}={value}\n")
        
        print("=" * 60)
        print("✓ Environment configured successfully!")
        print(f"✓ Saved to: {env_file.absolute()}")
        print()
        
        if 'DEEPSEEK_API_KEY' in config:
            print("✓ DeepSeek AI enabled - natural language parsing works!")
        elif 'OPENAI_API_KEY' in config:
            print("✓ OpenAI AI enabled - natural language parsing works!")
        else:
            print("⚠️  No AI provider configured - using pattern matching")
        
        if 'SENDER_EMAIL' in config and 'SENDER_PASSWORD' in config:
            print("✓ Email notifications configured!")
        
        print()
        print("=" * 60)
        print("Ready to use! Run:")
        print("   python neuro my_job_search.neuro")
        print("=" * 60)
    else:
        print("⚠️  No configuration provided. Neuro will use pattern matching.")
        print("   You can run setup_env.py again anytime.")

if __name__ == "__main__":
    setup_environment()

